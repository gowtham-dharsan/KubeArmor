# Build_steps stage used to build the source code of the application
build_steps:
  - name: Code Compile
    source: "."
    image:
        name: maven
        docker_run_params: '-u 0:0 -v /root/.m2:/root/.m2'
    commands:
      - "mvn -v"


# Dcoker_build stage builds the docker image from the Dockerfile
docker_build:
  - name: kubearmor
    Dockerfile_dir: .
    Dockerfile_name: Dockerfile.kubearmor
    pre_steps:
      - ls -l
      - echo cp
    tag: 1.0.2
    
image_properties:
   artifactory:
     url: https://artifactory.accuknox.com/
     cred: 'accunoxwithnexus'

#trivy properties
trivy_properties:
   status:
   #Acceptable Values are CRITICAL, HIGH, MEDIUM, LOW
     enabled: "false"
     level: high
     value: "10"  
   image:
       name: artifactory.accuknox.com/accuknox/trivy:latest
       docker_run_params:  --entrypoint='' -v /var/run/docker.sock:/var/run/docker.sock -v /root/.cache/:/root/.cache/

#clair properties
clair_properties:
   status:
    #Acceptable Values are CRITICAL, HIGH, MEDIUM, LOW 
     enabled: "false"
     level: high
     value: "10" 
     #pass the clair service url 
     clair_url : "http://clair:6060"
   image:
       name: artifactory.accuknox.com/accuknox/clair-scanner:alpine-3.12.4 #nordri/clair-scanner:latest
       docker_run_params:  --entrypoint='' -v /var/run/docker.sock:/var/run/docker.sock -v /root/.cache/:/root/.cache/
      
#anchore properties
anchore_properties:
  status:
    enabled: "false"
  image:
      name: artifactory.accuknox.com/accuknox/anchore-engine-cli:latest
      docker_run_params:  --entrypoint='' 
  anchore_conf:
  -   anchore.user: "admin"
      anchore.pass: "foobar"
      anchore.url: "http://jenkinsm01.accuknox.com:8228/v1/"
      


#sonar properties will pass the information server name and runner tool name
# which was configured in managed jenkins
 
sonar_properties:
   quality_gate:
     enabled: "false"
     timeout: "5" 
   sonarqube_server_name: "sonar-scan"
   sonar_runnner_tools_name: "SonarQubeScanner"

   image:
       name: sonarsource/sonar-scanner-cli
       docker_run_params:  -v /usr/local/bin:/usr/local/bin 

#sonar_conf containts properties section to run Sonar
   sonar_conf:
   -   sonar.projectKey: sonar-ci-jenkins
       sonar.projectName: sonar-ci-jenkins
       sonar.projectVersion: 2.7
       sonar.language: java
       sonar.java.binaries: ./
       sonar.sourcepath: src
       sonar.sourceEncoding : UTF-8
       sonar.web.host: http://35.232.229.106
       sonar.web.port: 80
       sonar.login: "b912168c2d3567e45034b90d64857d41cb2c3611"


# Lints and package the helm chart 
helm_build:
  - name: kubearmor
    image:
      name: "hypnoglow/kubernetes-helm"
    helm_dir: kubearmor-helm
    tag: 1.0.3
    commands:
      - helm lint
      - helm package .

# publish docker image, helmchart and artifacts to specified artifactory locations
publish_config:
    publish_jfrog_credentials: "accunoxwithnexus"
    docker:
      snapshot: artifactory.accuknox.com/repository/docker-snapshot
      dev:  artifactory.accuknox.com/repository/accu-docker
      verify:  artifactory.accuknox.com/repository/accu-docker
      prod:  artifactory.accuknox.com/repository/accu-docker
    helm:
      snapshot: https://artifactory.accuknox.com/repository/helm-snapshot/
      dev: https://artifactory.accuknox.com/repository/helm-dev/
      verify: https://artifactory.accuknox.com/repository/helm-verify/
      prod: https://artifactory.accuknox.com/repository/helm-prod/
    
